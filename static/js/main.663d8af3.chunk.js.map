{"version":3,"sources":["components/Item.js","components/List.js","components/userInput.js","App.js","reportWebVitals.js","index.js"],"names":["Item","item","handleDelete","handleChecked","className","checked","value","date","toLocaleString","type","onChange","onClick","List","items","map","index","UserInput","handleForm","useState","input","setInput","onSubmit","e","preventDefault","name","target","App","list","setList","newItem","Date","storedList","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAEaA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAcC,EAAvB,EAAuBA,cAAvB,OAChB,qBAAIC,UAAS,sBAAiBH,EAAKI,QAAU,UAAY,IAAzD,UACI,sBAAKD,UAAU,UAAf,UACI,4BAAIH,EAAKK,QACT,mBAAGF,UAAU,OAAb,SAAqBH,EAAKM,KAAKC,sBAEnC,sBAAKJ,UAAU,UAAf,UACI,uBAAOK,KAAK,WAAWJ,QAASJ,EAAKI,QAASK,SAAUP,IACxD,wBAAQQ,QAAST,EAAjB,2BCAGU,EARF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOX,EAAV,EAAUA,aAAcC,EAAxB,EAAwBA,cAAxB,OACT,6BACKU,EAAMC,KAAI,SAACb,EAAMc,GAAP,OACP,cAAC,EAAD,CAAkBd,KAAMA,EAAMC,aAAc,kBAAMA,EAAaa,IAAQZ,cAAe,kBAAMA,EAAcY,KAA/FA,SCcRC,EAjBG,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAQA,OACI,uBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACFN,EAAWE,GACXC,EAAS,KAIT,UACI,uBAAOhB,UAAU,OAAOoB,KAAK,QAAQf,KAAK,OAAOC,SAAU,SAACY,GAAD,OAAOF,EAASE,EAAEG,OAAOnB,QAAQA,MAAOa,IACnG,wBAAQV,KAAK,SAAb,mBCqBGiB,EA9BH,WACV,MAAwBR,mBAAS,IAAjC,mBAAOS,EAAP,KAAaC,EAAb,KAkBA,OACE,sBAAKxB,UAAU,UAAf,UACE,4CACA,sBAAKA,UAAU,SAAf,UACE,cAAC,EAAD,CAAWa,WApBE,SAACY,GAClBD,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CAAErB,MAAOuB,EAASxB,SAAS,EAAOE,KAAM,IAAIuB,YAoB1D,cAAC,EAAD,CAAMjB,MAAOc,EAAMzB,aAXJ,SAACa,GACpB,IAAIgB,EAAU,YAAOJ,GACrBI,EAAWC,OAAOjB,EAAO,GACzBa,EAAQG,IAQ2C5B,cAjB/B,SAACY,GACrB,IAAIgB,EAAU,YAAOJ,GACrBI,EAAWhB,GAAOV,SAAW0B,EAAWhB,GAAOV,QAC/CuB,EAAQG,aCHGE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.663d8af3.chunk.js","sourcesContent":["import \"./Item.css\"\r\n\r\nexport const Item = ({ item, handleDelete, handleChecked }) => (\r\n    <li className={`itemWrapper ${item.checked ? \"checked\" : \"\"}`}>\r\n        <div className=\"content\">\r\n            <p>{item.value}</p>\r\n            <p className=\"date\">{item.date.toLocaleString()}</p>\r\n        </div>\r\n        <div className=\"actions\">\r\n            <input type=\"checkbox\" checked={item.checked} onChange={handleChecked} />\r\n            <button onClick={handleDelete}>DELETE</button>\r\n        </div>\r\n    </li>\r\n)","import { Item } from \"./Item\"\r\n\r\nconst List = ({ items, handleDelete, handleChecked}) => (\r\n    <ul>\r\n        {items.map((item, index) => (\r\n            <Item key={index} item={item} handleDelete={() => handleDelete(index)} handleChecked={() => handleChecked(index)} />\r\n        ))}\r\n    </ul>\r\n)\r\n\r\nexport default List","import { useState } from \"react\";\r\n\r\nconst UserInput = ({ handleForm }) => {\r\n    const [input, setInput] = useState(\"\")\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        handleForm(input)\r\n        setInput(\"\")\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input className=\"text\" name=\"added\" type=\"text\" onChange={(e) => setInput(e.target.value)} value={input} />\r\n            <button type=\"submit\">+</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UserInput","import \"./App.css\"\nimport { useState } from \"react\";\nimport List from \"./components/List\"\nimport UserInput from \"./components/userInput\"\n\nconst App = () => {\n  const [list, setList] = useState([])\n\n  const handleForm = (newItem) => {\n    setList([...list, { value: newItem, checked: false, date: new Date() }])\n  }\n\n  const handleChecked = (index) => {\n    let storedList = [...list]\n    storedList[index].checked = !storedList[index].checked\n    setList(storedList)\n  }\n\n  const handleDelete = (index) => {\n    let storedList = [...list]\n    storedList.splice(index, 1)\n    setList(storedList)\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <h1>To-Do List</h1>\n      <div className=\"tdList\">\n        <UserInput handleForm={handleForm} />\n        <List items={list} handleDelete={handleDelete} handleChecked={handleChecked} />\n      </div>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}